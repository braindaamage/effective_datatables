<%= content_tag :table, class: "effective-datatable table #{table_class.to_s} ", id: "#{datatable.to_param}-table", data: {'effective-datatables-table' => style, 'source' => effective_datatables.datatable_path(datatable, {:format => 'json'}.merge(:attributes => datatable.attributes)), 'filter' => datatable_filter(datatable, filterable), 'non-sortable' => datatable_non_sortable(datatable, sortable), 'non-visible' => datatable_non_visible(datatable), 'widths' => datatable_widths(datatable), 'default-order' => datatable_default_order(datatable), 'column-classes' => datatable_column_classes(datatable)} do %>
  
   <%= content_tag :thead do %>
       <% max_depth = datatable.table_columns.map { |_, opts| opts[:th][:depth].to_i rescue 0 }.max %>
       <% [*0..max_depth].each do |depth| %>
         
         <%= content_tag :tr do %>
            <% table_columns = datatable.table_columns.select { |_, opts| (opts[:th][:depth] || 0 rescue 0) == depth } %>
               <% table_columns.each do |name, opts| %>
                     
                     <%= content_tag :th, opts[:label] || name, (opts[:th] || {}).merge({:title => opts[:label] || name}) %>
                     <% (opts[:append_th] || []).each do |faux_col| %>
                        <%= content_tag :th, faux_col[:label], (faux_col[:th] || {}).merge({:title => faux_col[:label]}) %>
                     <% end %>
                     
               <% end %>
         <% end %>
         
       <% end %>
   <% end %>

   <%= content_tag :tbody %>

<% end %>